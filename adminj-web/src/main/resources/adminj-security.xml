<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://www.springframework.org/schema/beans
                    http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
                    http://www.springframework.org/schema/security
                    http://www.springframework.org/schema/security/spring-security-3.2.xsd">

    <http pattern="/login" security="none"/>
    <http pattern="/resources/**" security="none"/>

    <http auto-config="true" use-expressions="true">
        <!-- default-target-url 指定了从登录页面登录后进行跳转的页面 always-use-default-target true表示登录成功后强制跳转
            authentication-failure-url 表示验证失败后进入的页面 login-processing-url 设置验证登录验证地址，如果不设置，默认是j_spring_security_check
            username-parameter,password-parameter 设置登录用户名和密码的请求name，默认：j_username,j_password
            default-target-url="/user/home" -->
        <form-login login-page="/login.html"
                    always-use-default-target="true"
                    authentication-failure-url="/login.html?error=1"
                    authentication-success-handler-ref="successHandler"
                />

        <!-- 登录页面可以匿名访问 -->
        <intercept-url pattern="/login.*" access="isAnonymous()"/>
        <!-- 必须登陆访问 -->
        <intercept-url pattern="/*.html*" access="isAuthenticated()"/>
        <intercept-url pattern="/*.jsp*" access="isAuthenticated()"/>

        <!-- <intercept-url pattern="/index" access="hasAnyRole('ROLE_ADMIN','ROLE_USER')" />
		<intercept-url pattern="/common" access="hasAnyRole('ROLE_ADMIN','ROLE_USER')" />
		<intercept-url pattern="/admin" access="hasAnyRole('ROLE_ADMIN')" /> -->
        <!-- 登出配置 -->
        <logout logout-success-url="/login.html"/>

        <!-- error-if-maximum-exceeded 后登陆的账号会挤掉第一次登陆的账号
            session-fixation-protection
            防止伪造sessionid攻击. 用户登录成功后会销毁用户当前的session.
                创建新的session,并把用户信息复制到新session中. -->

        <session-management invalid-session-url="/login.html?error=3"
                            session-fixation-protection="none">
            <concurrency-control max-sessions="1"
                                 error-if-maximum-exceeded="false" expired-url="/login.html?error=2"/>
            <!-- error-if-maximum-exceeded="true" 阻止第二次登录
                error-if-maximum-exceeded="false" 会清空第一次的登陆信息
             -->
        </session-management>

        <!-- 配置过滤 -->
        <custom-filter ref="appInterceptor" before="FILTER_SECURITY_INTERCEPTOR"/>
    </http>

    <!-- 密码加密工具类 -->
    <beans:bean id="encoder" class="com.lhy.adminj.sys.security.AppPasswordEncoder" />

    <!-- 认证管理器 -->
    <!--
    <authentication-manager alias="appAuthenticationManager">
        <authentication-provider user-service-ref="userDetailsService">
            <password-encoder ref="encoder" />
        </authentication-provider>
    </authentication-manager>
    -->
    <authentication-manager alias="appAuthenticationManager">
        <authentication-provider ref="authenticationProvider" />
    </authentication-manager>

    <beans:bean id="authenticationProvider"
                class="com.lhy.adminj.sys.security.AppLoginAuthenticationProvider">
        <beans:property name="userDetailsService" ref="userDetailsService" />
        <beans:property name="hideUserNotFoundExceptions" value="false" />
        <beans:property name="passwordEncoder" ref="encoder" />
    </beans:bean >
    <!--
    <beans:bean id="authenticationProvider"
            class="org.springframework.security.authentication.dao.DaoAuthenticationProvider">
        <beans:property name="userDetailsService" ref="userDetailsService" />
        <beans:property name="hideUserNotFoundExceptions" value="false" />
        <beans:property name="passwordEncoder" ref="encoder" />
    </beans:bean >
    -->

    <!-- 自定义拦截器 -->
    <beans:bean id="appInterceptor" class="com.lhy.adminj.sys.security.AppSecurityInterceptor">
        <beans:property name="authenticationManager" ref="appAuthenticationManager"/>
        <beans:property name="accessDecisionManager" ref="appAccessDescisionManager"/>
        <beans:property name="securityMetadataSource" ref="appSecurityMetadataSource"/>
    </beans:bean>

    <beans:bean id="userDetailsService" class="com.lhy.adminj.sys.security.UserDetailsServiceImpl"/>

    <!-- 角色服务类 -->
    <beans:bean id="uRoleService" class="com.lhy.adminj.basic.service.URoleServiceImpl"/>
    <!-- 权限服务类 -->
    <beans:bean id="uResourceService" class="com.lhy.adminj.basic.service.UResourceServiceImpl"/>

    <beans:bean id="appSecurityMetadataSource" class="com.lhy.adminj.sys.security.AppSecurityMetadataSource">
        <beans:constructor-arg name="roleService" ref="uRoleService"></beans:constructor-arg>
        <beans:constructor-arg name="resourceService" ref="uResourceService"></beans:constructor-arg>
    </beans:bean>

    <!-- 访问决策器 -->
    <beans:bean id="appAccessDescisionManager" class="com.lhy.adminj.sys.security.AppAccessDescisionManager"/>

    <!-- 登录成功业务处理 -->
    <beans:bean id="successHandler"
                class="com.lhy.adminj.sys.security.LoginAuthenticationSuccessHandler">
        <beans:property name="url" value="/index.html"></beans:property>
    </beans:bean>

</beans:beans>